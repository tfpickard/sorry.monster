# Upstream for oops.ninja instant service
upstream oops_service {
    server 127.0.0.1:8085;
    keepalive 16;
}

# HTTP -> HTTPS redirect for oops.ninja
server {
    listen 80;
    listen [::]:80;
    server_name oops.ninja www.oops.ninja;

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server for oops.ninja
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name oops.ninja www.oops.ninja;

    # TLS Configuration (Let's Encrypt paths)
    ssl_certificate     /etc/letsencrypt/live/oops.ninja/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/oops.ninja/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Reduced limits for instant mode
    client_max_body_size 5m;
    proxy_read_timeout   60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout   60s;

    # All routes go to oops service
    location / {
        proxy_pass http://oops_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    # Static files
    location /robots.txt {
        return 200 "User-agent: *\nAllow: /\n";
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://oops_service;
        proxy_set_header Host $host;
    }
}
